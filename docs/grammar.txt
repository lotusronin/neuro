Program -> tl_statements

tl_statements -> imports tl_statements | prototypes tl_statements | functiondefs tl_statements | null

imports -> import id ;

prototypes -> extern fn id ( opt_params ) : type ;

functiondefs -> fn id ( opt_params ) : type block

opt_params -> null | id : type | id : type , opt_params2
opt_params2 -> id : type | id : type , opt_params2

block -> { stmtlist }

stmtlist -> stmt stmtlisttail
stmtlisttail -> stmtlist | null


##
#Add keywords for flow control on top of usual statements
##

stmt -> deferblock | ifblock | loop | varstmt ; | expr ; | block | returnstmt | flowctrl | ;
returnstmt -> return expr ;
returnstmt -> return funcall ;
returnstmt -> return ;
flowctrl -> break ; | continue ;

##
#Defer statements
##
deferblock -> defer stmt

##
#If statements in language
##
ifblock -> if ( expression ) stmt optelseblock
optelseblock -> else stmt | null

##
#loop support
##
loop -> loophead { stmtlist }
loophead -> for ( vardecassign ; conditional ; expr ) | while ( expression )

expr -> expr plusmin multdiv | multdiv
multdiv -> multdiv starslash parenexp | parenexp
parenexp -> ( expr ) | const | var | funcall

varstmt -> vardec | vardecassign | varassign
var -> id
vardec -> var : type
varassign -> var = expression
vardecassign -> vardec = expression

funcname -> id
funccall -> funcname ( opt_args )

opt_args -> null | id . | id . , opt_args2
opt_args2 -> id | id , opt_args2

type -> int | char | float | double | bool | id
opttype -> type | null

binop -> + | - | * | / | '|' | '||' | & | && | ^ | %
plusmin -> + | -
starslash -> * | /

const -> ilit | flit | charlit
